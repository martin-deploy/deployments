# Ref: https://github.com/argoproj/argo-cd
# Ref: https://github.com/argoproj/argo-helm/blob/main/charts/argo-cd/values.yaml

global:
  revisionHistoryLimit: 1 # Number of old deployment ReplicaSets to retain. The rest will be garbage collected.
  imagePullSecrets: [] # Secrets with credentials to pull images from a private registry

  securityContext: {} # Toggle and define pod-level security context.
    # runAsUser: 999
    # runAsGroup: 999
    # fsGroup: 999

  networkPolicy: # Default network policy rules used by all components
    create: false # Create NetworkPolicy objects for all components
    defaultDenyIngress: false # Default deny all ingress traffic

argo-cd:
  createAggregateRoles: false # Create aggregated roles that extend existing cluster roles to interact with argo-cd resources
  createClusterRoles: true # Create cluster roles for cluster-wide installation. Used when you manage applications in the same cluster where Argo CD runs

  openshift:
    enabled: false # enables using arbitrary uid for argo repo server

  crds: # Custom resource configuration
    install: true # Install and upgrade CRDs
    keep: false # Keep CRDs on chart uninstall

  configs:
    cm: # General Argo CD configuration for https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cm.yaml
      create: true # Create the argocd-cm configmap for [declarative setup]

      url: "" # Argo CD's externally facing base URL (optional). Required when configuring SSO
      exec.enabled: true # Enable exec feature in Argo UI: https://argo-cd.readthedocs.io/en/latest/operator-manual/rbac/#exec-resource
      admin.enabled: true # Enable local admin user: https://argo-cd.readthedocs.io/en/latest/faq/#how-to-disable-admin-user

    params: # Argo CD configuration parameters: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/argocd-cmd-params-cm.yaml
      server.insecure: false # Run server without TLS
      server.disable.auth: false # Disable Argo CD RBAC for user authentication
      server.enable.gzip: true # Enable GZIP compression

    rbac: # Argo CD RBAC policy configuration: https://github.com/argoproj/argo-cd/blob/master/docs/operator-manual/rbac.md
      # Create the argocd-rbac-cm configmap with ([Argo CD RBAC policy]) definitions.
      # If false, it is expected the configmap will be created by something else.
      # Argo CD will not work if there is no configmap created with the name above.
      create: true

    cmp: # ConfigMap for Config Management Plugins: https://argo-cd.readthedocs.io/en/stable/operator-manual/config-management-plugins/
      create: false
      # plugins: # Plugin yaml files to be added to argocd-cmp-cm
        # martin-templater:
          # generate:
            # command: [sh, -c]
            # args:
              # - |
                # echo "{\"kind\": \"ConfigMap\", \"apiVersion\": \"v1\", \"metadata\": { \"name\": \"$ARGOCD_APP_NAME\", \"namespace\": \"$ARGOCD_APP_NAMESPACE\", \"annotations\": {\"Foo\": \"$ARGOCD_ENV_FOO\", \"KubeVersion\": \"$KUBE_VERSION\", \"KubeApiVersion\": \"$KUBE_API_VERSIONS\",\"Bar\": \"baz\"}}}"
          # discover:
            # fileName: "./subdir/s*.yaml"
            # find:
              # glob: "**/Chart.yaml"
              # command: [sh, -c, find . -name env.yaml]

    # Provide one or multiple [external cluster credentials]
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/declarative-setup/#clusters
    # https://argo-cd.readthedocs.io/en/stable/operator-manual/security/#external-cluster-credentials
    # https://argo-cd.readthedocs.io/en/stable/user-guide/projects/#project-scoped-repositories-and-clusters
    clusterCredentials: []
      # - name: mycluster
      #   server: https://mycluster.com
      #   labels: {}
      #   annotations: {}
      #   config:
      #     bearerToken: "<authentication token>"
      #     tlsClientConfig:
      #       insecure: false
      #       caData: "<base64 encoded certificate>"

    # Repositories list to be used by applications
    # Creates a secret for each key/value specified below to create repositories
    repositories:
      app-1:            { name: app-1,            type: git, url: https://github.com/orgs/martin-deploy/app-1.git            }
      app-2-code:       { name: app-2-code,       type: git, url: https://github.com/orgs/martin-deploy/app-2-code.git       }
      app-2-deployment: { name: app-2-deployment, type: git, url: https://github.com/orgs/martin-deploy/app-2-deployment.git }
      app-2-dockerfile: { name: app-2-dockerfile, type: git, url: https://github.com/orgs/martin-deploy/app-2-dockerfile.git }
      app-2-pipeline:   { name: app-2-pipeline,   type: git, url: https://github.com/orgs/martin-deploy/app-2-pipeline.git   }
      deployments:      { name: deployments,      type: git, url: https://github.com/orgs/martin-deploy/deployments.git      }
      dockerfiles:      { name: dockerfiles,      type: git, url: https://github.com/orgs/martin-deploy/dockerfiles.git      }
      pipelines:        { name: pipelines,        type: git, url: https://github.com/orgs/martin-deploy/pipelines.git        }

    secret: # Argo CD sensitive data: Ref: https://argo-cd.readthedocs.io/en/stable/operator-manual/user-management/#sensitive-data-and-sso-client-secrets
      createSecret: true

  controller: # Application controller
    serviceAccount:
      create: true
      automountServiceAccountToken: true
    metrics: # Application controller metrics configuration
      enabled: false

  dex:
    enabled: false

  redis:
    enabled: true
    serviceAccount:
      create: false
      automountServiceAccountToken: false

  # This key configures Redis-HA subchart and when enabled (redis-ha.enabled=true)
  # the custom redis deployment is omitted
  # Check the redis-ha chart for more properties
  redis-ha:
    enabled: false

  server:
    replicas: 1

    autoscaling: # Argo CD server Horizontal Pod Autoscaler
      enabled: false

    # Argo UI extensions
    # This function in tech preview stage, do expect instability or breaking changes in newer versions.
    # Ref: https://github.com/argoproj-labs/argocd-extensions
    extensions:
      enabled: false

    serviceAccount:
      create: true
      automountServiceAccountToken: true

    service:
      type: LoadBalancer

    ingress:
      enabled: false
      ingressClassName: "" # Defines which ingress controller will implement the resource

      # List of ingress hosts
      # Argo Ingress.
      # Hostnames must be provided if Ingress is enabled.
      # Secrets must be manually created in the namespace
      hosts: []
        # - argocd.example.com

      tls: [] # Ingress TLS configuration
        # - secretName: your-certificate-name
        #   hosts:
        #     - argocd.example.com

      https: true # Uses `server.service.servicePortHttps` instead `server.service.servicePortHttp`

  repoServer: # Repo Server
    autoscaling:
      enabled: false

    # Additional containers to be added to the repo server pod
    # Ref: https://argo-cd.readthedocs.io/en/stable/user-guide/config-management-plugins/
    # Note: Supports use of custom Helm templates
    extraContainers:
      []
      # - name: cmp-my-plugin
      #   command:
      #     - "/var/run/argocd/argocd-cmp-server"
      #   image: busybox
      #   securityContext:
      #     runAsNonRoot: true
      #     runAsUser: 999
      #   volumeMounts:
      #     - mountPath: /var/run/argocd
      #       name: var-files
      #     - mountPath: /home/argocd/cmp-server/plugins
      #       name: plugins
      #     # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.
      #     - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      #       subPath: my-plugin.yaml
      #       name: argocd-cmp-cm
      #     # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps
      #     # mitigate path traversal attacks.
      #     - mountPath: /tmp
      #       name: cmp-tmp
      # - name: cmp-my-plugin2
      #   command:
      #     - "/var/run/argocd/argocd-cmp-server"
      #   image: busybox
      #   securityContext:
      #     runAsNonRoot: true
      #     runAsUser: 999
      #   volumeMounts:
      #     - mountPath: /var/run/argocd
      #       name: var-files
      #     # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.
      #     - mountPath: /home/argocd/cmp-server/plugins
      #       name: plugins
      #     - mountPath: /home/argocd/cmp-server/config/plugin.yaml
      #       subPath: my-plugin2.yaml
      #       name: argocd-cmp-cm
      #     # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps
      #     # mitigate path traversal attacks.
      #     - mountPath: /tmp
      #       name: cmp-tmp

    # Repo server service account
    # If create is set to true, make sure to uncomment the name and update the rbac section below
    serviceAccount:
      create: true
      name: argocd-repo-server
      automountServiceAccountToken: true

    rbac: # Repo server rbac rules
      - apiGroups: [argoproj.io]
        resources: [applications, projects]
        verbs: [get, list, watch]

  applicationSet: # ApplicationSet controller
    enabled: true

    serviceAccount:
      create: true
      automountServiceAccountToken: true

    webhook: # Webhook for the Git Generator: https://argocd-applicationset.readthedocs.io/en/master/Generators-Git/#webhook-configuration)
      ingress:
        enabled: false
        ingressClassName: "" # Defines which ingress ApplicationSet controller will implement the resource

        # List of ingress hosts
        # Hostnames must be provided if Ingress is enabled.
        # Secrets must be manually created in the namespace
        hosts: []
          # - argocd-applicationset.example.com

        tls: [] # Ingress TLS configuration
          # - secretName: argocd-applicationset-tls
          #   hosts:
          #     - argocd-applicationset.example.com

  notifications: # Notifications controller
    enabled: false
